package views

import (
	"github.com/sain0136/go-rotaryanalytic/pkg"
)

css thClass() {
	background-color: lightblue;
	font-weight: bold;
	padding-top: 12px;
	padding-bottom: 12px;
	text-align: left;
}

css boldClass() {
	font-weight: bold;
}

templ LogTable(LogEntries []pkg.RotaryLog , lastPage int) {
	<style type="text/css">
	@media (max-width: 900px) {
	.column-to-hide {
      display: none;
    }
	}
	@media (max-width: 600px) {
	.column-to-hide-mobile {
	  display: none;
	}
	}
	.trow:hover {
		background-color: #ddd;
		cursor: pointer;
	}
	#table td, #table th {
 	 border: 1px solid #ddd;
 	 padding: 8px;
	}
	.no-wrap {
		white-space: nowrap;
	}	
	.small-column{
		width: 8rem;
	}
	.expandable-text {
		position: relative;
	}
	.text-preview {
		max-height: 3.6em; /* Limit to 3 lines */
		overflow: hidden;
		position: relative;
		background: linear-gradient(180deg, rgba(255,255,255,1) 60%, rgba(173,216,230,0) 100%); /* Light blue gradient */
		padding-bottom: 1em; /* Padding to accommodate the gradient */
	}
	.text-full {
	display: none;
	}
	.expand-link, .collapse-link {
	color: blue;
	cursor: pointer;
	display: block;
	margin-top: 5px;
	}
	</style>
	<script type="text/javascript">
 function attachExpandableTextListeners() {
      const expandableElements = document.querySelectorAll('.expandable-text');

      expandableElements.forEach(element => {
        const expandLink = element.querySelector('.expand-link');
        const collapseLink = element.querySelector('.collapse-link');
        const textPreview = element.querySelector('.text-preview');
        const textFull = element.querySelector('.text-full');

        expandLink.addEventListener('click', function(event) {
          event.preventDefault();
          textPreview.style.display = 'none';
          textFull.style.display = 'block';
          expandLink.style.display = 'none';
          collapseLink.style.display = 'block';
        });

        collapseLink.addEventListener('click', function(event) {
          event.preventDefault();
          textPreview.style.display = 'block';
          textFull.style.display = 'none';
          expandLink.style.display = 'block';
          collapseLink.style.display = 'none';
        });
      });
    }

    document.addEventListener('DOMContentLoaded', function() {
      attachExpandableTextListeners();
    });

	document.body.addEventListener('htmx:afterSettle', function() {
      attachExpandableTextListeners();
    });

	</script>
	if LogEntries == nil {
		<span>Error: LogEntries could not be processed</span>
	} else {
		<table id="table">
			<thead>
				<tr class={ th() }>
					<th class="column-to-hide" colspan="1">Id</th>
					<th class="column-to-hide-mobile" colspan="1">Timestamp</th>
					<th class="small-column" colspan="1">Type</th>
					<th class="small-column" colspan="1">Event</th>
					<th class="small-column" colspan="1">Status</th>
					<th class="column-to-hide-mobile small-column" colspan="1">Source</th>
					<th class="column-to-hide" colspan="1">Message</th>
					<th class="column-to-hide" colspan="1">Details</th>
				</tr>
			</thead>
			<tbody id="tableBody">
				for _, entry := range LogEntries {
					<tr class="trow">
						<td class="column-to-hide">{ entry.UniqueId }</td>
						<td class="column-to-hide-mobile no-wrap">{ entry.TimeStamp }</td>
						<td>{ entry.Type }</td>
						<td>{ entry.Event }</td>
						<td>{ entry.Status }</td>
						<td class="column-to-hide-mobile">{ entry.Source }</td>
						<td class="column-to-hide">{ entry.Message }</td>
						<td class="column-to-hide">
						if len(entry.CustomMessage) > 0 {
						<div class="expandable-text">
						<div class="text-preview">{ entry.CustomMessage }</div>
						<div class="text-full">{ entry.CustomMessage }</div>
						<a href="#" class="expand-link">Expand</a>
						<a href="#" class="collapse-link" style="display:none;">Collapse</a>
						</div>
						} 
						</td>
					</tr>
				}
			</tbody>
		</table>
	}
}
